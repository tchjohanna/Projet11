{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nconst API_URL = 'http://localhost:3001/api/v1/user';\nconst LOGIN_URL = `${API_URL}/login`;\nconst PROFILE_URL = `${API_URL}/profile`;\nconst USER_ACTIONS = {\n  LOGIN: 'users/login',\n  FETCH_BY_TOKEN: 'users/fetchUserByToken',\n  UPDATE_BY_TOKEN: 'users/updateUserByToken',\n  FETCH_ACCOUNT: 'users/fetchAccount'\n};\nexport const loginUser = createAsyncThunk('users/login', async (_ref, thunkAPI) => {\n  let {\n    email,\n    password,\n    remember\n  } = _ref;\n  try {\n    const response = await fetch('http://localhost:3001/api/v1/user/login', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      localStorage.setItem('token', data.body.token);\n      if (remember) {\n        localStorage.setItem(\"email\", email);\n        localStorage.setItem(\"psw\", password);\n      }\n      if (!remember) {\n        localStorage.removeItem(\"email\");\n        localStorage.removeItem(\"psw\");\n      }\n      return data;\n    } else {\n      return thunkAPI.rejectWithValue(data);\n    }\n  } catch (e) {\n    console.log('Error', e.response.data);\n    thunkAPI.rejectWithValue(e.response.data);\n  }\n});\nexport const fetchUserBytoken = createAsyncThunk('users/fetchUserByToken', async (_ref2, thunkAPI) => {\n  let {\n    token\n  } = _ref2;\n  try {\n    const response = await fetch('http://localhost:3001/api/v1/user/profile', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        Authorization: \"Bearer \" + token,\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    if (response.status === 200) {\n      return data;\n    } else {\n      return thunkAPI.rejectWithValue(data);\n    }\n  } catch (e) {\n    console.log('Error', e.response.data);\n    return thunkAPI.rejectWithValue(e.response.data);\n  }\n});\nexport const updateUserBytoken = createAsyncThunk('users/updateUserByToken', async (_ref3, thunkAPI) => {\n  let {\n    userName\n  } = _ref3;\n  let token = localStorage.getItem(\"token\");\n  try {\n    const response = await fetch('http://localhost:3001/api/v1/user/profile', {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        Authorization: \"Bearer \" + token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userName\n      })\n    });\n    const data = await response.json();\n    if (response.status === 200) {\n      return data;\n    } else {\n      return thunkAPI.rejectWithValue(data);\n    }\n  } catch (e) {\n    console.log('Error', e.response.data);\n    return thunkAPI.rejectWithValue(e.response.data);\n  }\n});\nexport const fetchAccount = createAsyncThunk('users/fetchAccount', async thunkAPI => {\n  try {\n    const response = await fetch('/Data.json');\n    const data = await response.json();\n    if (response.status === 200) {\n      return data;\n    } else {\n      return thunkAPI.rejectWithValue(data);\n    }\n  } catch (e) {\n    console.log('Error', e.response.data);\n    return thunkAPI.rejectWithValue(e.response.data);\n  }\n});\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    userName: '',\n    email: '',\n    isFetching: false,\n    isSuccess: false,\n    isError: false,\n    errorMessage: ''\n  },\n  reducers: {\n    clearState: state => {\n      state.isError = false;\n      state.isSuccess = false;\n      state.isFetching = false;\n      return state;\n    }\n  },\n  extraReducers: {\n    [loginUser.fulfilled]: state => {\n      state.isFetching = false;\n      state.isSuccess = true;\n      return state;\n    },\n    [loginUser.rejected]: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      console.log('payload', payload);\n      state.isFetching = false;\n      state.isError = true;\n      state.errorMessage = payload.message;\n    },\n    [loginUser.pending]: state => {\n      state.isFetching = true;\n    },\n    [fetchUserBytoken.pending]: state => {\n      state.isFetching = true;\n    },\n    [fetchUserBytoken.fulfilled]: (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      state.isFetching = false;\n      state.isSuccess = true;\n      state.username = payload.body.userName;\n      state.firstname = payload.body.firstName;\n      state.lastname = payload.body.lastName;\n    },\n    [fetchUserBytoken.rejected]: state => {\n      console.log('fetchUserBytoken');\n      state.isFetching = false;\n      state.isError = true;\n    },\n    [updateUserBytoken.pending]: state => {\n      state.isFetching = true;\n    },\n    [updateUserBytoken.fulfilled]: (state, _ref6) => {\n      let {\n        payload\n      } = _ref6;\n      state.isFetching = false;\n      state.isSuccess = true;\n      state.username = payload.body.userName;\n      state.firstname = payload.body.firstName;\n      state.lastname = payload.body.lastName;\n    },\n    [updateUserBytoken.rejected]: state => {\n      console.log('updateUserBytoken');\n      state.isFetching = false;\n      state.isError = true;\n    },\n    [fetchAccount.pending]: state => {\n      state.isFetching = true;\n    },\n    [fetchAccount.fulfilled]: (state, _ref7) => {\n      let {\n        payload\n      } = _ref7;\n      state.isFetching = false;\n      state.isSuccess = true;\n      state.account = payload;\n    },\n    [fetchAccount.rejected]: state => {\n      console.log('fetchAccount');\n      state.isFetching = false;\n      state.isError = true;\n    }\n  }\n});\nexport const {\n  clearState\n} = userSlice.actions;\nexport const userSelector = state => state.user;","map":{"version":3,"names":["createSlice","createAsyncThunk","API_URL","LOGIN_URL","PROFILE_URL","USER_ACTIONS","LOGIN","FETCH_BY_TOKEN","UPDATE_BY_TOKEN","FETCH_ACCOUNT","loginUser","_ref","thunkAPI","email","password","remember","response","fetch","method","headers","Accept","body","JSON","stringify","data","json","status","localStorage","setItem","token","removeItem","rejectWithValue","e","console","log","fetchUserBytoken","_ref2","Authorization","updateUserBytoken","_ref3","userName","getItem","fetchAccount","userSlice","name","initialState","isFetching","isSuccess","isError","errorMessage","reducers","clearState","state","extraReducers","fulfilled","rejected","_ref4","payload","message","pending","_ref5","username","firstname","firstName","lastname","lastName","_ref6","_ref7","account","actions","userSelector","user"],"sources":["/Users/johannacastagna/Documents/projet11Enieme/frontend/src/features/UserSlices.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nconst API_URL = 'http://localhost:3001/api/v1/user';\nconst LOGIN_URL = `${API_URL}/login`;\nconst PROFILE_URL = `${API_URL}/profile`;\n\nconst USER_ACTIONS = {\n  LOGIN: 'users/login',\n  FETCH_BY_TOKEN: 'users/fetchUserByToken',\n  UPDATE_BY_TOKEN: 'users/updateUserByToken',\n  FETCH_ACCOUNT: 'users/fetchAccount',\n};\n\n\n\n\nexport const loginUser = createAsyncThunk(\n  'users/login',\n  async ({ email, password, remember }, thunkAPI) => {\n    try {\n      const response = await fetch(\n        'http://localhost:3001/api/v1/user/login',\n        {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            email,\n            password,\n          }),\n        }\n      );\n      let data = await response.json();\n      if (response.status === 200) {\n        localStorage.setItem('token', data.body.token);\n        if(remember) {\n            localStorage.setItem(\"email\", (email))\n            localStorage.setItem(\"psw\", (password))\n        }\n        if(!remember) {\n            localStorage.removeItem(\"email\")\n            localStorage.removeItem(\"psw\")\n        }\n        return data;\n      } else {\n        return thunkAPI.rejectWithValue(data);\n      }\n    } catch (e) {\n      console.log('Error', e.response.data);\n      thunkAPI.rejectWithValue(e.response.data);\n    }\n  }\n);\n\nexport const fetchUserBytoken = createAsyncThunk(\n  'users/fetchUserByToken',\n  async ({ token }, thunkAPI) => {\n    try {\n      const response = await fetch(\n        'http://localhost:3001/api/v1/user/profile',\n        {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json',\n            Authorization: \"Bearer \" + token,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n      const data = await response.json();\n\n      if (response.status === 200) {\n        return data ;\n      } else {\n        return thunkAPI.rejectWithValue(data);\n      }\n    } catch (e) {\n      console.log('Error', e.response.data);\n      return thunkAPI.rejectWithValue(e.response.data);\n    }\n  }\n);\n\nexport const updateUserBytoken = createAsyncThunk(\n  'users/updateUserByToken',\n  async ( {userName} , thunkAPI) => {\n    let token = localStorage.getItem(\"token\")\n    try {\n      const response = await fetch(\n        'http://localhost:3001/api/v1/user/profile',\n        {\n          method: 'PUT',\n          headers: {\n            Accept: 'application/json',\n            Authorization: \"Bearer \" + token,\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            userName\n          }),\n        }\n      );\n      const data = await response.json();\n\n      if (response.status === 200) {\n        return data ;\n      } else {\n        return thunkAPI.rejectWithValue(data);\n      }\n    } catch (e) {\n      console.log('Error', e.response.data);\n      return thunkAPI.rejectWithValue(e.response.data);\n    }\n  }\n);\n\nexport const fetchAccount = createAsyncThunk(\n  'users/fetchAccount',\n  async ( thunkAPI) => {\n    try {\n      const response = await fetch('/Data.json');\n      const data = await response.json();\n\n      if (response.status === 200) {\n        return data ;\n      } else {\n        return thunkAPI.rejectWithValue(data);\n      }\n    } catch (e) {\n      console.log('Error', e.response.data);\n      return thunkAPI.rejectWithValue(e.response.data);\n    }\n  }\n);\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    userName: '',\n    email: '',\n    isFetching: false,\n    isSuccess: false,\n    isError: false,\n    errorMessage: '',\n  },\n  reducers: {\n    clearState: (state) => {\n      state.isError = false;\n      state.isSuccess = false;\n      state.isFetching = false;\n\n      return state;\n    },\n  },\n  extraReducers: {\n    [loginUser.fulfilled]: (state) => {\n      state.isFetching = false;\n      state.isSuccess = true;\n      return state;\n    },\n    [loginUser.rejected]: (state, { payload }) => {\n      console.log('payload', payload);\n      state.isFetching = false;\n      state.isError = true;\n      state.errorMessage = payload.message;\n    },\n    [loginUser.pending]: (state) => {\n      state.isFetching = true;\n    },\n    [fetchUserBytoken.pending]: (state) => {\n      state.isFetching = true;\n    },\n    [fetchUserBytoken.fulfilled]: (state, { payload }) => {\n      state.isFetching = false;\n      state.isSuccess = true;\n      state.username = payload.body.userName;\n      state.firstname = payload.body.firstName;\n      state.lastname = payload.body.lastName;\n    },\n    [fetchUserBytoken.rejected]: (state) => {\n      console.log('fetchUserBytoken');\n      state.isFetching = false;\n      state.isError = true;\n    },\n    [updateUserBytoken.pending]: (state) => {\n      state.isFetching = true;\n    },\n    [updateUserBytoken.fulfilled]: (state, { payload }) => {\n      state.isFetching = false;\n      state.isSuccess = true;\n      state.username = payload.body.userName;\n      state.firstname = payload.body.firstName;\n      state.lastname = payload.body.lastName;\n    },\n    [updateUserBytoken.rejected]: (state) => {\n      console.log('updateUserBytoken');\n      state.isFetching = false;\n      state.isError = true;\n    },\n\n    [fetchAccount.pending]: (state) => {\n      state.isFetching = true;\n    },\n    [fetchAccount.fulfilled]: (state, { payload }) => {\n      state.isFetching = false;\n      state.isSuccess = true;\n      state.account = payload;\n    },\n    [fetchAccount.rejected]: (state) => {\n      console.log('fetchAccount');\n      state.isFetching = false;\n      state.isError = true;\n    },\n  },\n});\n\nexport const { clearState } = userSlice.actions;\n\nexport const userSelector = (state) => state.user;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}