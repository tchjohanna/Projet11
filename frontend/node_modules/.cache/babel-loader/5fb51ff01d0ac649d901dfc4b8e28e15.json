{"ast":null,"code":"import { createReducer, createAction, configureStore } from \"@reduxjs/toolkit\"; // Actions (Définition des actions Redux)\n\nexport const logIn = createAction('logIn'); // Action pour la connexion\n\nexport const logOut = createAction('logOut'); // Action pour la déconnexion\n\nexport const setUserData = createAction('setUserData'); // Action pour définir les données de l'utilisateur\n\nexport const updateUserData = createAction('updateUserData'); // Action pour mettre à jour les données de l'utilisateur\n// Initial state (État initial du réducteur)\n\nconst initialState = {\n  name: \"userReducer\",\n  connected: false,\n  // Indique si l'utilisateur est connecté ou non\n  JWTtoken: null,\n  // Token d'authentification JSON Web Token\n  userData: {} // Données de l'utilisateur\n\n}; // Reducer (Définition du réducteur Redux)\n\nconst userReducer = createReducer(initialState, builder => {\n  builder.addCase(logIn, (draft, action) => {\n    // Gestion de l'action de connexion\n    if (!draft.connected) {\n      draft.connected = true;\n      draft.JWTtoken = action.payload; // Stocker le token d'authentification\n    }\n  }).addCase(logOut, draft => {\n    // Gestion de l'action de déconnexion\n    if (draft.connected) {\n      draft.connected = false;\n      draft.userData = {}; // Réinitialiser les données de l'utilisateur\n\n      draft.JWTtoken = null; // Réinitialiser le token d'authentification\n    }\n  }).addCase(setUserData, (draft, action) => {\n    // Gestion de l'action pour définir les données de l'utilisateur\n    draft.userData = action.payload; // Mettre à jour les données de l'utilisateur\n  }).addCase(updateUserData, (draft, action) => {\n    // Gestion de l'action pour mettre à jour les données de l'utilisateur\n    draft.userData.firstName = action.payload.firstName; // Mettre à jour le prénom\n\n    draft.userData.lastName = action.payload.lastName; // Mettre à jour le nom de famille\n  });\n}); // Sélecteurs Redux (Fonctions pour sélectionner des données spécifiques depuis le store)\n// Exportez tous vos sélecteurs\n\nexport const selectUserLogin = state => state.user.connected;\nexport const selectJWT = state => state.user.JWTtoken;\nexport const selectUserData = state => state.user.userData;\nexport const selectFirstName = state => {\n  const userData = selectUserData(state);\n  return userData ? userData.firstName : '';\n};\nexport const selectLastName = state => {\n  const userData = selectUserData(state);\n  return userData ? userData.lastName : '';\n};\nexport const selectUserName = state => {\n  var _state$user$userData;\n\n  return (_state$user$userData = state.user.userData) === null || _state$user$userData === void 0 ? void 0 : _state$user$userData.userName;\n}; // Création et configuration du store Redux en utilisant configureStore\n\nexport const store = configureStore({\n  // Définition des réducteurs pour gérer les différentes parties de l'état de l'application\n  reducer: {\n    user: userReducer // Utilisation du réducteur `userReducer` pour gérer l'état de l'utilisateur\n\n  }\n});","map":{"version":3,"names":["createReducer","createAction","configureStore","logIn","logOut","setUserData","updateUserData","initialState","name","connected","JWTtoken","userData","userReducer","builder","addCase","draft","action","payload","firstName","lastName","selectUserLogin","state","user","selectJWT","selectUserData","selectFirstName","selectLastName","selectUserName","userName","store","reducer"],"sources":["/Users/johannacastagna/Documents/Projet11/frontend/src/store/store.jsx"],"sourcesContent":["import { createReducer, createAction, configureStore } from \"@reduxjs/toolkit\";\n\n// Actions (Définition des actions Redux)\nexport const logIn = createAction('logIn'); // Action pour la connexion\nexport const logOut = createAction('logOut'); // Action pour la déconnexion\nexport const setUserData = createAction('setUserData'); // Action pour définir les données de l'utilisateur\nexport const updateUserData = createAction('updateUserData'); // Action pour mettre à jour les données de l'utilisateur\n\n// Initial state (État initial du réducteur)\nconst initialState = {\n    name: \"userReducer\",\n    connected: false, // Indique si l'utilisateur est connecté ou non\n    JWTtoken: null, // Token d'authentification JSON Web Token\n    userData: {}, // Données de l'utilisateur\n}\n\n// Reducer (Définition du réducteur Redux)\nconst userReducer = createReducer(initialState, (builder) => {\n    builder\n        .addCase(logIn, (draft, action) => { // Gestion de l'action de connexion\n            if (!draft.connected) {\n                draft.connected = true;\n                draft.JWTtoken = action.payload; // Stocker le token d'authentification\n            }\n        })\n        .addCase(logOut, (draft) => { // Gestion de l'action de déconnexion\n            if (draft.connected) {\n                draft.connected = false;\n                draft.userData = {}; // Réinitialiser les données de l'utilisateur\n                draft.JWTtoken = null; // Réinitialiser le token d'authentification\n            }\n        })\n        .addCase(setUserData, (draft, action) => { // Gestion de l'action pour définir les données de l'utilisateur\n            draft.userData = action.payload; // Mettre à jour les données de l'utilisateur\n        })\n        .addCase(updateUserData, (draft, action) => { // Gestion de l'action pour mettre à jour les données de l'utilisateur\n            draft.userData.firstName = action.payload.firstName; // Mettre à jour le prénom\n            draft.userData.lastName = action.payload.lastName; // Mettre à jour le nom de famille\n        })\n})\n\n// Sélecteurs Redux (Fonctions pour sélectionner des données spécifiques depuis le store)\n// Exportez tous vos sélecteurs\nexport const selectUserLogin = (state) => state.user.connected;\nexport const selectJWT = (state) => state.user.JWTtoken;\nexport const selectUserData = (state) => state.user.userData;\nexport const selectFirstName = (state) => {\n  const userData = selectUserData(state);\n  return userData ? userData.firstName : '';\n};\nexport const selectLastName = (state) => {\n  const userData = selectUserData(state);\n  return userData ? userData.lastName : '';\n};\n\nexport const selectUserName = (state) => state.user.userData?.userName;\n\n\n// Création et configuration du store Redux en utilisant configureStore\nexport const store = configureStore({\n  // Définition des réducteurs pour gérer les différentes parties de l'état de l'application\n  reducer: {\n    user: userReducer, // Utilisation du réducteur `userReducer` pour gérer l'état de l'utilisateur\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}