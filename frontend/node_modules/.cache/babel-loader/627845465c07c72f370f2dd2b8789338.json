{"ast":null,"code":"var _jsxFileName = \"/Users/johannacastagna/Documents/Projet11/frontend/src/components/AuthentificationPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport ApiCalls from \"../services/Api\";\nimport { logIn } from '../store/store'; // Assurez-vous de définir le chemin correct vers votre fichier store.jsx\n\nimport getLocalStorage from \"../storage/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthentificationPage() {\n  _s();\n\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState('');\n  const [rememberMe, setRememberMe] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n\n    if (userName.trim().length === 0 || password.length === 0) {\n      return setError(\"Please fill in both the username and password fields.\");\n    }\n\n    if (userName.trim().length < 3) {\n      return setError(\"Username must be at least 3 characters long.\");\n    }\n\n    if (password.length < 3) {\n      return setError(\"Password must be at least 3 characters long.\");\n    }\n\n    const response = await new ApiCalls().userLogIn(userName, password, rememberMe);\n\n    if (response.status !== 200) {\n      return setError(\"The username and/or password is incorrect.\");\n    }\n\n    if (rememberMe) {\n      localStorage.setItem(\"rememberData\", JSON.stringify({\n        rememberMe,\n        userName,\n        password\n      }));\n    }\n\n    const rememberCheckBox = document.getElementById(\"remember-me\");\n\n    if (!rememberCheckBox.checked) {\n      localStorage.clear();\n    }\n\n    dispatch(logIn(response.data.body.token));\n    navigate('/user');\n  };\n\n  useEffect(() => {\n    let loginData = getLocalStorage(\"rememberData\", false);\n\n    if (loginData) {\n      setRememberMe(loginData.rememberMe);\n      setUserName(loginData.userName || \"\");\n      setPassword(loginData.password || \"\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        value: userName,\n        autoComplete: \"current-username\",\n        onChange: e => setUserName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        autoComplete: \"current-password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-remember\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"remember-me\",\n        onChange: e => setRememberMe(e.target.checked),\n        checked: rememberMe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"remember-me\",\n        children: \"Remember me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"sign-in-button\",\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthentificationPage, \"bgDxHPvmjTPeCpp9hxeODVTCSwg=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = AuthentificationPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthentificationPage\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useNavigate","ApiCalls","logIn","getLocalStorage","AuthentificationPage","userName","setUserName","password","setPassword","error","setError","rememberMe","setRememberMe","dispatch","navigate","handleSubmit","e","preventDefault","trim","length","response","userLogIn","status","localStorage","setItem","JSON","stringify","rememberCheckBox","document","getElementById","checked","clear","data","body","token","loginData","target","value"],"sources":["/Users/johannacastagna/Documents/Projet11/frontend/src/components/AuthentificationPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport ApiCalls from \"../services/Api\";\nimport { logIn } from '../store/store'; // Assurez-vous de définir le chemin correct vers votre fichier store.jsx\n\nimport getLocalStorage from \"../storage/storage\";\n\nexport default function AuthentificationPage() {\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState('');\n  const [rememberMe, setRememberMe ] = useState(false);\n  \n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    if (userName.trim().length === 0 || password.length === 0) {\n      return setError(\"Please fill in both the username and password fields.\");\n    }\n\n    if (userName.trim().length < 3) {\n      return setError(\"Username must be at least 3 characters long.\");\n    }\n\n    if (password.length < 3) {\n      return setError(\"Password must be at least 3 characters long.\");\n    }\n\n    const response = await new ApiCalls().userLogIn(userName, password, rememberMe);\n\n    if (response.status !== 200) {\n      return setError(\"The username and/or password is incorrect.\");\n    }\n\n    if (rememberMe) {\n      localStorage.setItem(\n        \"rememberData\",\n        JSON.stringify({ rememberMe, userName, password })\n      );\n    }\n\n    const rememberCheckBox = document.getElementById(\"remember-me\");\n\n    if (!rememberCheckBox.checked) {\n      localStorage.clear();\n    }\n\n    dispatch(logIn(response.data.body.token));\n    navigate('/user');\n  };\n\n  useEffect(() => {\n    let loginData = getLocalStorage(\"rememberData\", false);\n    if (loginData) {\n      setRememberMe(loginData.rememberMe);\n      setUserName(loginData.userName || \"\");\n      setPassword(loginData.password || \"\");\n    }\n  }, []);\n  \n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"input-wrapper\">\n        <label htmlFor=\"username\">Username</label>\n        <input \n          type=\"text\" \n          id=\"username\" \n          value={userName}\n          autoComplete=\"current-username\"\n          onChange={(e) => setUserName(e.target.value)}\n        />\n      </div>\n      <div className=\"input-wrapper\">\n        <label htmlFor=\"password\">Password</label>\n        <input \n          type=\"password\" \n          id=\"password\" \n          value={password} \n          autoComplete=\"current-password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n      <div className=\"input-remember\">\n        <input \n          type=\"checkbox\" \n          id=\"remember-me\"\n          onChange={(e) => setRememberMe(e.target.checked)}\n          checked={rememberMe}\n        />\n        <label htmlFor=\"remember-me\">Remember me</label>\n      </div>\n      <button type=\"submit\" className=\"sign-in-button\">Sign In</button>\n      <p className=\"error-message\">{error}</p>\n    </form>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}