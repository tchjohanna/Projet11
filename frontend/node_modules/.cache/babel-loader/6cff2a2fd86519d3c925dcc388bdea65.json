{"ast":null,"code":"var _jsxFileName = \"/Users/johannacastagna/Documents/Projet11/frontend/src/components/EditUser.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Input, InputContainer, Buttons, ButtonContainer, EditButton, Header } from \"./EditableNameStyles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditableName = _ref => {\n  _s();\n\n  let {\n    fullName,\n    onSave\n  } = _ref;\n  const [editing, setEditing] = useState(false);\n  const [names, setNames] = useState(fullName.split(\" \"));\n  useEffect(() => {\n    setNames(fullName.split(\" \"));\n  }, [fullName]);\n\n  const handleSave = () => {\n    if (names[0] && names[1]) {\n      onSave(names.join(\" \"));\n      setEditing(false);\n    } else {\n      alert(\"Please fill in both first name and last name.\");\n    }\n  };\n\n  const handleCancel = () => {\n    setNames(fullName.split(\" \"));\n    setEditing(false);\n  };\n\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      handleSave();\n    }\n  };\n\n  if (!editing) {\n    return /*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(EditButton, {\n        onClick: () => setEditing(true),\n        children: \"Edit Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"First Name\",\n        value: names[0],\n        onChange: e => setNames([e.target.value, names[1]]),\n        onKeyDown: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Last Name\",\n        value: names[1],\n        onChange: e => setNames([names[0], e.target.value]),\n        onKeyDown: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Buttons, {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        onClick: handleCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditableName, \"g7vXGc69z5krG++KQwQ45OUGeLI=\");\n\n_c = EditableName;\nexport default EditableName;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditableName\");","map":{"version":3,"names":["React","useState","useEffect","Input","InputContainer","Buttons","ButtonContainer","EditButton","Header","EditableName","fullName","onSave","editing","setEditing","names","setNames","split","handleSave","join","alert","handleCancel","handleKeyPress","event","key","e","target","value"],"sources":["/Users/johannacastagna/Documents/Projet11/frontend/src/components/EditUser.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Input,\n  InputContainer,\n  Buttons,\n  ButtonContainer,\n  EditButton,\n  Header,\n} from \"./EditableNameStyles\";\n\nconst EditableName = ({ fullName, onSave }) => {\n  const [editing, setEditing] = useState(false);\n  const [names, setNames] = useState(fullName.split(\" \"));\n\n  useEffect(() => {\n    setNames(fullName.split(\" \"));\n  }, [fullName]);\n\n  const handleSave = () => {\n    if (names[0] && names[1]) {\n      onSave(names.join(\" \"));\n      setEditing(false);\n    } else {\n      alert(\"Please fill in both first name and last name.\");\n    }\n  };\n\n  const handleCancel = () => {\n    setNames(fullName.split(\" \"));\n    setEditing(false);\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      handleSave();\n    }\n  };\n\n  if (!editing) {\n    return (\n      <Header>\n        <EditButton onClick={() => setEditing(true)}>Edit Name</EditButton>\n      </Header>\n    );\n  }\n\n  return (\n    <div>\n      <InputContainer>\n        <Input\n          type=\"text\"\n          placeholder=\"First Name\"\n          value={names[0]}\n          onChange={(e) => setNames([e.target.value, names[1]])}\n          onKeyDown={handleKeyPress}\n        />\n        <Input\n          type=\"text\"\n          placeholder=\"Last Name\"\n          value={names[1]}\n          onChange={(e) => setNames([names[0], e.target.value])}\n          onKeyDown={handleKeyPress}\n        />\n      </InputContainer>\n      <ButtonContainer>\n        <Buttons onClick={handleSave}>Save</Buttons>\n        <Buttons onClick={handleCancel}>Cancel</Buttons>\n      </ButtonContainer>\n    </div>\n  );\n};\n\nexport default EditableName;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,KADF,EAEEC,cAFF,EAGEC,OAHF,EAIEC,eAJF,EAKEC,UALF,EAMEC,MANF,QAOO,sBAPP;;;AASA,MAAMC,YAAY,GAAG,QAA0B;EAAA;;EAAA,IAAzB;IAAEC,QAAF;IAAYC;EAAZ,CAAyB;EAC7C,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAACS,QAAQ,CAACM,KAAT,CAAe,GAAf,CAAD,CAAlC;EAEAd,SAAS,CAAC,MAAM;IACda,QAAQ,CAACL,QAAQ,CAACM,KAAT,CAAe,GAAf,CAAD,CAAR;EACD,CAFQ,EAEN,CAACN,QAAD,CAFM,CAAT;;EAIA,MAAMO,UAAU,GAAG,MAAM;IACvB,IAAIH,KAAK,CAAC,CAAD,CAAL,IAAYA,KAAK,CAAC,CAAD,CAArB,EAA0B;MACxBH,MAAM,CAACG,KAAK,CAACI,IAAN,CAAW,GAAX,CAAD,CAAN;MACAL,UAAU,CAAC,KAAD,CAAV;IACD,CAHD,MAGO;MACLM,KAAK,CAAC,+CAAD,CAAL;IACD;EACF,CAPD;;EASA,MAAMC,YAAY,GAAG,MAAM;IACzBL,QAAQ,CAACL,QAAQ,CAACM,KAAT,CAAe,GAAf,CAAD,CAAR;IACAH,UAAU,CAAC,KAAD,CAAV;EACD,CAHD;;EAKA,MAAMQ,cAAc,GAAIC,KAAD,IAAW;IAChC,IAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;MACzBN,UAAU;IACX;EACF,CAJD;;EAMA,IAAI,CAACL,OAAL,EAAc;IACZ,oBACE,QAAC,MAAD;MAAA,uBACE,QAAC,UAAD;QAAY,OAAO,EAAE,MAAMC,UAAU,CAAC,IAAD,CAArC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EAED,oBACE;IAAA,wBACE,QAAC,cAAD;MAAA,wBACE,QAAC,KAAD;QACE,IAAI,EAAC,MADP;QAEE,WAAW,EAAC,YAFd;QAGE,KAAK,EAAEC,KAAK,CAAC,CAAD,CAHd;QAIE,QAAQ,EAAGU,CAAD,IAAOT,QAAQ,CAAC,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,EAAiBZ,KAAK,CAAC,CAAD,CAAtB,CAAD,CAJ3B;QAKE,SAAS,EAAEO;MALb;QAAA;QAAA;QAAA;MAAA,QADF,eAQE,QAAC,KAAD;QACE,IAAI,EAAC,MADP;QAEE,WAAW,EAAC,WAFd;QAGE,KAAK,EAAEP,KAAK,CAAC,CAAD,CAHd;QAIE,QAAQ,EAAGU,CAAD,IAAOT,QAAQ,CAAC,CAACD,KAAK,CAAC,CAAD,CAAN,EAAWU,CAAC,CAACC,MAAF,CAASC,KAApB,CAAD,CAJ3B;QAKE,SAAS,EAAEL;MALb;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAiBE,QAAC,eAAD;MAAA,wBACE,QAAC,OAAD;QAAS,OAAO,EAAEJ,UAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,OAAD;QAAS,OAAO,EAAEG,YAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAjBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD,CA5DD;;GAAMX,Y;;KAAAA,Y;AA8DN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}