{"ast":null,"code":"var _jsxFileName = \"/Users/johannacastagna/Documents/Projet_11/frontend/src/components/FormLogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useiteneraire } from \"react-router\";\nimport ApiCalls from \"../services/Api\";\nimport { logIn } from '../store/store'; // Assurez-vous de définir le chemin correct vers votre fichier store.jsx\n\nimport getLocalStorage from \"../storage/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormLogin() {\n  _s();\n  // États pour stocker les données du formulaire et les erreurs\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState('');\n  const [rememberMe, setRememberMe] = useState(false);\n\n  // Dispatcher Redux pour gérer les actions\n  const dispatch = useDispatch();\n\n  // iteneraireur pour la redirection après la connexion\n  const iteneraire = useiteneraire();\n\n  // Gestion de la soumission du formulaire\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n\n    // Validation des données du formulaire\n    if (userName.trim().length === 0 || password.length === 0) {\n      return setError(\"Please fill in both the username and password fields.\");\n    }\n    if (userName.trim().length < 3) {\n      return setError(\"Username must be at least 3 characters long.\");\n    }\n    if (password.length < 3) {\n      return setError(\"Password must be at least 3 characters long.\");\n    }\n\n    // Appel de l'API pour la connexion\n    const response = await new ApiCalls().userLogIn(userName, password, rememberMe);\n    if (response.status !== 200) {\n      return setError(\"The username and/or password is incorrect.\");\n    }\n\n    // Stockage des données dans le localStorage si \"Remember me\" est coché\n    if (rememberMe) {\n      localStorage.setItem(\"rememberData\", JSON.stringify({\n        rememberMe,\n        userName,\n        password\n      }));\n    }\n\n    // Nettoyage du localStorage si \"Remember me\" n'est pas coché\n    const rememberCheckBox = document.getElementById(\"remember-me\");\n    if (!rememberCheckBox.checked) {\n      localStorage.clear();\n    }\n\n    // Dispatch de l'action Redux pour la connexion réussie\n    dispatch(logIn(response.data.body.token));\n\n    // Redirection vers la page de l'utilisateur\n    iteneraire('/user');\n  };\n\n  // Récupération des données du localStorage lors du chargement initial\n  useEffect(() => {\n    let loginData = getLocalStorage(\"rememberData\", false);\n    setRememberMe(loginData.rememberMe);\n    setUserName(loginData.userName);\n    setPassword(loginData.password);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        value: userName,\n        autoComplete: \"current-username\",\n        onChange: e => setUserName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        autoComplete: \"current-password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-remember\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"remember-me\",\n        onChange: e => setRememberMe(e.target.checked),\n        checked: rememberMe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"remember-me\",\n        children: \"Remember me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"sign-in-button\",\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(FormLogin, \"cvYgUUIWmOso6wFbWxZFu+XMiak=\", false, function () {\n  return [useDispatch];\n});\n_c = FormLogin;\nvar _c;\n$RefreshReg$(_c, \"FormLogin\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useiteneraire","ApiCalls","logIn","getLocalStorage","jsxDEV","_jsxDEV","FormLogin","_s","userName","setUserName","password","setPassword","error","setError","rememberMe","setRememberMe","dispatch","iteneraire","handleSubmit","e","preventDefault","trim","length","response","userLogIn","status","localStorage","setItem","JSON","stringify","rememberCheckBox","document","getElementById","checked","clear","data","body","token","loginData","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","autoComplete","onChange","target","_c","$RefreshReg$"],"sources":["/Users/johannacastagna/Documents/Projet_11/frontend/src/components/FormLogin.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useiteneraire } from \"react-router\";\nimport ApiCalls from \"../services/Api\";\nimport { logIn } from '../store/store'; // Assurez-vous de définir le chemin correct vers votre fichier store.jsx\n\nimport getLocalStorage from \"../storage/storage\";\n\nexport default function FormLogin() {\n  // États pour stocker les données du formulaire et les erreurs\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState('');\n  const [rememberMe, setRememberMe ] = useState(false);\n  \n\n  // Dispatcher Redux pour gérer les actions\n  const dispatch = useDispatch();\n\n  // iteneraireur pour la redirection après la connexion\n  const iteneraire = useiteneraire();\n\n  // Gestion de la soumission du formulaire\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    // Validation des données du formulaire\n    if (userName.trim().length === 0 || password.length === 0) {\n      return setError(\"Please fill in both the username and password fields.\");\n    }\n\n    if (userName.trim().length < 3) {\n      return setError(\"Username must be at least 3 characters long.\");\n    }\n\n    if (password.length < 3) {\n      return setError(\"Password must be at least 3 characters long.\");\n    }\n\n    // Appel de l'API pour la connexion\n    const response = await new ApiCalls().userLogIn(userName, password, rememberMe);\n\n    if (response.status !== 200) {\n      return setError(\"The username and/or password is incorrect.\");\n    }\n\n    // Stockage des données dans le localStorage si \"Remember me\" est coché\n    if (rememberMe) {\n      localStorage.setItem(\n        \"rememberData\",\n        JSON.stringify({ rememberMe, userName, password })\n      );\n    }\n\n    // Nettoyage du localStorage si \"Remember me\" n'est pas coché\n    const rememberCheckBox = document.getElementById(\"remember-me\");\n\n    if (!rememberCheckBox.checked) {\n      localStorage.clear();\n    }\n\n    // Dispatch de l'action Redux pour la connexion réussie\n    dispatch(logIn(response.data.body.token));\n\n    // Redirection vers la page de l'utilisateur\n    iteneraire('/user');\n  };\n\n  // Récupération des données du localStorage lors du chargement initial\n  useEffect(() => {\n    let loginData = getLocalStorage(\"rememberData\", false);\n    setRememberMe(loginData.rememberMe);\n    setUserName(loginData.userName);\n    setPassword(loginData.password);\n  }, []);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"input-wrapper\">\n        <label htmlFor=\"username\">Username</label>\n        <input \n          type=\"text\" \n          id=\"username\" \n          value={userName}\n          autoComplete=\"current-username\"\n          onChange={(e) => setUserName(e.target.value)}\n        />\n      </div>\n      <div className=\"input-wrapper\">\n        <label htmlFor=\"password\">Password</label>\n        <input \n          type=\"password\" \n          id=\"password\" \n          value={password} \n          autoComplete=\"current-password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n      <div className=\"input-remember\">\n        <input \n          type=\"checkbox\" \n          id=\"remember-me\"\n          onChange={(e) => setRememberMe(e.target.checked)}\n          checked={rememberMe}\n        />\n        <label htmlFor=\"remember-me\">Remember me</label>\n      </div>\n      <button type=\"submit\" className=\"sign-in-button\">Sign In</button>\n      <p className=\"error-message\">{error}</p>\n    </form>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}