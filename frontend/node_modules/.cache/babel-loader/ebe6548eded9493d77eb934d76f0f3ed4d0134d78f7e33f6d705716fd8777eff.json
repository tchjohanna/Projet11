{"ast":null,"code":"import axios from \"axios\";\nclass ApiCalls {\n  // Fonction pour gérer la connexion de l'utilisateur\n  async userLogIn(email, password, rememberMe) {\n    try {\n      const response = await axios.post('http://localhost:3001/api/v1/user/login', {\n        email: email,\n        password: password\n      });\n      if (response.data.body.token) {\n        if (rememberMe) {\n          sessionStorage.setItem(\"JWT\", response.data.body.token);\n        }\n        console.log(\"Mon token de connexion est: \" + response.data.body.token);\n        return response;\n      }\n    } catch (erreur) {\n      return erreur.response ? erreur.response.data : erreur;\n    }\n  }\n\n  // Fonction pour récupérer les données du profil de l'utilisateur\n  async getUserProfileData(JWT) {\n    try {\n      const response = await axios.post(\"http://localhost:3001/api/v1/user/profile\", {}, {\n        headers: {\n          Authorization: \"Bearer \" + JWT\n        }\n      });\n      return response;\n    } catch (erreur) {\n      return erreur;\n    }\n  }\n\n  // Fonction pour mettre à jour les données du profil de l'utilisateur\n  async updateUserProfileData(firstName, lastName, JWT) {\n    try {\n      const response = await axios.put(\"http://localhost:3001/api/v1/user/profile\", {\n        firstName,\n        lastName\n      }, {\n        headers: {\n          Authorization: \"Bearer \" + JWT\n        }\n      });\n      return response;\n    } catch (erreur) {\n      return erreur;\n    }\n  }\n}\nexport default ApiCalls;","map":{"version":3,"names":["axios","ApiCalls","userLogIn","email","password","rememberMe","response","post","data","body","token","sessionStorage","setItem","console","log","erreur","getUserProfileData","JWT","headers","Authorization","updateUserProfileData","firstName","lastName","put"],"sources":["/Users/johannacastagna/Documents/Projet_11/frontend/src/services/Api.jsx"],"sourcesContent":["import axios from \"axios\";\n\nclass ApiCalls {\n  // Fonction pour gérer la connexion de l'utilisateur\n  async userLogIn(email, password, rememberMe) {\n    try {\n      const response = await axios.post(\n        'http://localhost:3001/api/v1/user/login',\n        {\n          email: email,\n          password: password\n        }\n      );\n\n      if (response.data.body.token) {\n        if (rememberMe) {\n          sessionStorage.setItem(\"JWT\", response.data.body.token);\n        }\n        console.log(\"Mon token de connexion est: \" + response.data.body.token);\n        return response;\n      }\n    } catch (erreur) {\n      return erreur.response ? erreur.response.data : erreur;\n    }\n  }\n\n  // Fonction pour récupérer les données du profil de l'utilisateur\n  async getUserProfileData(JWT) {\n    try {\n      const response = await axios.post(\n        \"http://localhost:3001/api/v1/user/profile\",\n        {},\n        {\n          headers: {\n            Authorization: \"Bearer \" + JWT\n          }\n        }\n      );\n      return response;\n    } catch (erreur) {\n      return erreur;\n    }\n  }\n\n  // Fonction pour mettre à jour les données du profil de l'utilisateur\n  async updateUserProfileData(firstName, lastName, JWT) {\n    try {\n      const response = await axios.put(\n        \"http://localhost:3001/api/v1/user/profile\",\n        {\n          firstName,\n          lastName\n        },\n        {\n          headers: {\n            Authorization: \"Bearer \" + JWT\n          }\n        }\n      );\n      return response;\n    } catch (erreur) {\n      return erreur;\n    }\n  }\n}\n\nexport default ApiCalls;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,CAAC;EACb;EACA,MAAMC,SAASA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,UAAU,EAAE;IAC3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAC/B,yCAAyC,EACzC;QACEJ,KAAK,EAAEA,KAAK;QACZC,QAAQ,EAAEA;MACZ,CAAC,CACF;MAED,IAAIE,QAAQ,CAACE,IAAI,CAACC,IAAI,CAACC,KAAK,EAAE;QAC5B,IAAIL,UAAU,EAAE;UACdM,cAAc,CAACC,OAAO,CAAC,KAAK,EAAEN,QAAQ,CAACE,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC;QACzD;QACAG,OAAO,CAACC,GAAG,CAAC,8BAA8B,GAAGR,QAAQ,CAACE,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC;QACtE,OAAOJ,QAAQ;MACjB;IACF,CAAC,CAAC,OAAOS,MAAM,EAAE;MACf,OAAOA,MAAM,CAACT,QAAQ,GAAGS,MAAM,CAACT,QAAQ,CAACE,IAAI,GAAGO,MAAM;IACxD;EACF;;EAEA;EACA,MAAMC,kBAAkBA,CAACC,GAAG,EAAE;IAC5B,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAC/B,2CAA2C,EAC3C,CAAC,CAAC,EACF;QACEW,OAAO,EAAE;UACPC,aAAa,EAAE,SAAS,GAAGF;QAC7B;MACF,CAAC,CACF;MACD,OAAOX,QAAQ;IACjB,CAAC,CAAC,OAAOS,MAAM,EAAE;MACf,OAAOA,MAAM;IACf;EACF;;EAEA;EACA,MAAMK,qBAAqBA,CAACC,SAAS,EAAEC,QAAQ,EAAEL,GAAG,EAAE;IACpD,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMN,KAAK,CAACuB,GAAG,CAC9B,2CAA2C,EAC3C;QACEF,SAAS;QACTC;MACF,CAAC,EACD;QACEJ,OAAO,EAAE;UACPC,aAAa,EAAE,SAAS,GAAGF;QAC7B;MACF,CAAC,CACF;MACD,OAAOX,QAAQ;IACjB,CAAC,CAAC,OAAOS,MAAM,EAAE;MACf,OAAOA,MAAM;IACf;EACF;AACF;AAEA,eAAed,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}