{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Fonction utilitaire pour effectuer des requêtes à l'API\nasync function makeApiRequest(url, options, thunkAPI) {\n  try {\n    const response = await fetch(url, options);\n    const data = await response.json();\n    if (response.status === 200) {\n      return data;\n    } else {\n      return thunkAPI.rejectWithValue(data);\n    }\n  } catch (e) {\n    console.error('Erreur lors de la requête à l\\'API', e.response.data);\n    return thunkAPI.rejectWithValue(e.response.data);\n  }\n}\nexport const loginUser = createAsyncThunk('users/login', async (_ref, thunkAPI) => {\n  let {\n    email,\n    password,\n    remember\n  } = _ref;\n  const loginUrl = 'http://localhost:3001/api/v1/user/login';\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  };\n\n  // Utilise la fonction utilitaire pour effectuer la requête\n  const data = await makeApiRequest(loginUrl, options, thunkAPI);\n  if (data) {\n    // Logique de gestion des données pour le login\n    localStorage.setItem('token', data.body.token);\n    if (remember) {\n      localStorage.setItem('email', email);\n      localStorage.setItem('psw', password);\n    } else {\n      localStorage.removeItem('email');\n      localStorage.removeItem('psw');\n    }\n    return data;\n  }\n});\nexport const fetchUserBytoken = createAsyncThunk('users/fetchUserByToken', async (_ref2, thunkAPI) => {\n  let {\n    token\n  } = _ref2;\n  const profileUrl = 'http://localhost:3001/api/v1/user/profile';\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      Authorization: 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    }\n  };\n\n  // Utilise la fonction utilitaire pour effectuer la requête\n  const data = await makeApiRequest(profileUrl, options, thunkAPI);\n  if (data) {\n    // Logique de gestion des données pour la récupération des informations utilisateur\n    return data;\n  }\n});\nexport const updateUserBytoken = createAsyncThunk('users/updateUserByToken', async (_ref3, thunkAPI) => {\n  let {\n    userName\n  } = _ref3;\n  // Récupère le jeton d'authentification du stockage local\n  const token = localStorage.getItem('token');\n  const profileUrl = 'http://localhost:3001/api/v1/user/profile';\n  const options = {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      Authorization: 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      userName\n    })\n  };\n\n  // Utilise la fonction utilitaire pour effectuer la requête\n  const data = await makeApiRequest(profileUrl, options, thunkAPI);\n  if (data) {\n    // Logique de gestion des données pour la mise à jour des informations utilisateur\n    return data;\n  }\n});\nconst userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    userName: '',\n    email: '',\n    isFetching: false,\n    isSuccess: false,\n    isError: false,\n    errorMessage: ''\n  },\n  reducers: {\n    clearState: state => {\n      state.isError = false;\n      state.isSuccess = false;\n      state.isFetching = false;\n      return state;\n    }\n  },\n  extraReducers: {\n    [loginUser.fulfilled]: state => {\n      state.isFetching = false;\n      state.isSuccess = true;\n      return state;\n    },\n    [loginUser.rejected]: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      state.isFetching = false;\n      state.isError = true;\n      state.errorMessage = payload.message;\n    },\n    [loginUser.pending]: state => {\n      state.isFetching = true;\n    },\n    [fetchUserBytoken.pending]: state => {\n      state.isFetching = true;\n    },\n    [fetchUserBytoken.fulfilled]: (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      state.isFetching = false;\n      state.isSuccess = true;\n      state.userName = payload.body.userName;\n      state.email = payload.body.email;\n      // Ajoutez d'autres propriétés utilisateur si nécessaire\n    },\n\n    [fetchUserBytoken.rejected]: state => {\n      state.isFetching = false;\n      state.isError = true;\n    },\n    [updateUserBytoken.pending]: state => {\n      state.isFetching = true;\n    },\n    [updateUserBytoken.fulfilled]: (state, _ref6) => {\n      let {\n        payload\n      } = _ref6;\n      state.isFetching = false;\n      state.isSuccess = true;\n      state.userName = payload.body.userName;\n      // Mettez à jour d'autres propriétés utilisateur si nécessaire\n    },\n\n    [updateUserBytoken.rejected]: state => {\n      state.isFetching = false;\n      state.isError = true;\n    }\n  }\n});\nexport const {\n  clearState\n} = userSlice.actions;\nexport const userSelector = state => state.user;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","makeApiRequest","url","options","thunkAPI","response","fetch","data","json","status","rejectWithValue","e","console","error","loginUser","_ref","email","password","remember","loginUrl","method","headers","Accept","body","JSON","stringify","localStorage","setItem","token","removeItem","fetchUserBytoken","_ref2","profileUrl","Authorization","updateUserBytoken","_ref3","userName","getItem","userSlice","name","initialState","isFetching","isSuccess","isError","errorMessage","reducers","clearState","state","extraReducers","fulfilled","rejected","_ref4","payload","message","pending","_ref5","_ref6","actions","userSelector","user","reducer"],"sources":["/Users/johannacastagna/Documents/projet11Enieme/frontend/src/features/UserSlices.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Fonction utilitaire pour effectuer des requêtes à l'API\nasync function makeApiRequest(url, options, thunkAPI) {\n  try {\n    const response = await fetch(url, options);\n    const data = await response.json();\n\n    if (response.status === 200) {\n      return data;\n    } else {\n      return thunkAPI.rejectWithValue(data);\n    }\n  } catch (e) {\n    console.error('Erreur lors de la requête à l\\'API', e.response.data);\n    return thunkAPI.rejectWithValue(e.response.data);\n  }\n}\n\nexport const loginUser = createAsyncThunk('users/login', async ({ email, password, remember }, thunkAPI) => {\n  const loginUrl = 'http://localhost:3001/api/v1/user/login';\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      email,\n      password,\n    }),\n  };\n\n  // Utilise la fonction utilitaire pour effectuer la requête\n  const data = await makeApiRequest(loginUrl, options, thunkAPI);\n\n  if (data) {\n    // Logique de gestion des données pour le login\n    localStorage.setItem('token', data.body.token);\n\n    if (remember) {\n      localStorage.setItem('email', email);\n      localStorage.setItem('psw', password);\n    } else {\n      localStorage.removeItem('email');\n      localStorage.removeItem('psw');\n    }\n\n    return data;\n  }\n});\n\nexport const fetchUserBytoken = createAsyncThunk('users/fetchUserByToken', async ({ token }, thunkAPI) => {\n  const profileUrl = 'http://localhost:3001/api/v1/user/profile';\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      Authorization: 'Bearer ' + token,\n      'Content-Type': 'application/json',\n    },\n  };\n\n  // Utilise la fonction utilitaire pour effectuer la requête\n  const data = await makeApiRequest(profileUrl, options, thunkAPI);\n\n  if (data) {\n    // Logique de gestion des données pour la récupération des informations utilisateur\n    return data;\n  }\n});\n\nexport const updateUserBytoken = createAsyncThunk('users/updateUserByToken', async ({ userName }, thunkAPI) => {\n  // Récupère le jeton d'authentification du stockage local\n  const token = localStorage.getItem('token');\n\n  const profileUrl = 'http://localhost:3001/api/v1/user/profile';\n  const options = {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      Authorization: 'Bearer ' + token,\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      userName,\n    }),\n  };\n\n  // Utilise la fonction utilitaire pour effectuer la requête\n  const data = await makeApiRequest(profileUrl, options, thunkAPI);\n\n  if (data) {\n    // Logique de gestion des données pour la mise à jour des informations utilisateur\n    return data;\n  }\n});\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    userName: '',\n    email: '',\n    isFetching: false,\n    isSuccess: false,\n    isError: false,\n    errorMessage: '',\n  },\n  reducers: {\n    clearState: (state) => {\n      state.isError = false;\n      state.isSuccess = false;\n      state.isFetching = false;\n      return state;\n    },\n  },\n  extraReducers: {\n    [loginUser.fulfilled]: (state) => {\n      state.isFetching = false;\n      state.isSuccess = true;\n      return state;\n    },\n    [loginUser.rejected]: (state, { payload }) => {\n      state.isFetching = false;\n      state.isError = true;\n      state.errorMessage = payload.message;\n    },\n    [loginUser.pending]: (state) => {\n      state.isFetching = true;\n    },\n    [fetchUserBytoken.pending]: (state) => {\n      state.isFetching = true;\n    },\n    [fetchUserBytoken.fulfilled]: (state, { payload }) => {\n      state.isFetching = false;\n      state.isSuccess = true;\n      state.userName = payload.body.userName;\n      state.email = payload.body.email;\n      // Ajoutez d'autres propriétés utilisateur si nécessaire\n    },\n    [fetchUserBytoken.rejected]: (state) => {\n      state.isFetching = false;\n      state.isError = true;\n    },\n    [updateUserBytoken.pending]: (state) => {\n      state.isFetching = true;\n    },\n    [updateUserBytoken.fulfilled]: (state, { payload }) => {\n      state.isFetching = false;\n      state.isSuccess = true;\n      state.userName = payload.body.userName;\n      // Mettez à jour d'autres propriétés utilisateur si nécessaire\n    },\n    [updateUserBytoken.rejected]: (state) => {\n      state.isFetching = false;\n      state.isError = true;\n    },\n  },\n});\n\nexport const { clearState } = userSlice.actions;\n\nexport const userSelector = (state) => state.user;\n\nexport default userSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}