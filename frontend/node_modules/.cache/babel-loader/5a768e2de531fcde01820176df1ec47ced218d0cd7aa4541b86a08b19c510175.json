{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nimport { loginUser, fetchUserProfile } from \"../actions/userActions\";\n\n// Création du slice utilisateur\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    profile: null,\n    error: null,\n    isLoggedIn: false\n  },\n  reducers: {\n    logoutUser: state => {\n      state.profile = null;\n      state.isLoggedIn = false;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchUserProfile.fulfilled, (state, action) => {\n      state.profile = action.payload;\n    }).addCase(fetchUserProfile.rejected, (state, action) => {\n      state.error = action.error.message;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.error = action.error.message;\n    });\n  }\n});\n\n// Exportation des actions\nexport const {\n  logoutUser\n} = userSlice.actions;\n\n// Configuration du store Redux\nconst store = configureStore({\n  reducer: {\n    user: userSlice.reducer\n  }\n});\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","loginUser","fetchUserProfile","userSlice","name","initialState","profile","error","isLoggedIn","reducers","logoutUser","state","extraReducers","builder","addCase","fulfilled","action","payload","rejected","message","actions","store","reducer","user"],"sources":["/Users/johannacastagna/Documents/Projet_11/frontend/src/store/store.js"],"sourcesContent":["import { configureStore, createSlice } from '@reduxjs/toolkit';\nimport { loginUser, fetchUserProfile } from \"../actions/userActions\";\n\n// Création du slice utilisateur\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    profile: null,\n    error: null,\n    isLoggedIn: false,\n  },\n  reducers: {\n    logoutUser: (state) => {\n      state.profile = null;\n      state.isLoggedIn = false;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchUserProfile.fulfilled, (state, action) => {\n        state.profile = action.payload;\n      })\n      .addCase(fetchUserProfile.rejected, (state, action) => {\n        state.error = action.error.message;\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.error = action.error.message;\n      });\n  },\n});\n\n// Exportation des actions\nexport const { logoutUser } = userSlice.actions;\n\n// Configuration du store Redux\nconst store = configureStore({\n  reducer: {\n    user: userSlice.reducer,\n  },\n});\n\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAC9D,SAASC,SAAS,EAAEC,gBAAgB,QAAQ,wBAAwB;;AAEpE;AACA,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC5BI,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,OAAO,EAAE,IAAI;IACbC,KAAK,EAAE,IAAI;IACXC,UAAU,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACL,OAAO,GAAG,IAAI;MACpBK,KAAK,CAACH,UAAU,GAAG,KAAK;IAC1B;EACF,CAAC;EACDI,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACZ,gBAAgB,CAACa,SAAS,EAAE,CAACJ,KAAK,EAAEK,MAAM,KAAK;MACtDL,KAAK,CAACL,OAAO,GAAGU,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC,CACDH,OAAO,CAACZ,gBAAgB,CAACgB,QAAQ,EAAE,CAACP,KAAK,EAAEK,MAAM,KAAK;MACrDL,KAAK,CAACJ,KAAK,GAAGS,MAAM,CAACT,KAAK,CAACY,OAAO;IACpC,CAAC,CAAC,CACDL,OAAO,CAACb,SAAS,CAACiB,QAAQ,EAAE,CAACP,KAAK,EAAEK,MAAM,KAAK;MAC9CL,KAAK,CAACJ,KAAK,GAAGS,MAAM,CAACT,KAAK,CAACY,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAET;AAAW,CAAC,GAAGP,SAAS,CAACiB,OAAO;;AAE/C;AACA,MAAMC,KAAK,GAAGtB,cAAc,CAAC;EAC3BuB,OAAO,EAAE;IACPC,IAAI,EAAEpB,SAAS,CAACmB;EAClB;AACF,CAAC,CAAC;AAEF,eAAeD,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}