{"ast":null,"code":"var _jsxFileName = \"/Users/johannacastagna/Documents/Projet11/frontend/src/components/EditUser.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ApiProvider from \"../services/Api\";\nimport { updateUserData, selectFirstName, selectLastName, selectJWT } from '../store/store'; // Utilisez simplement \"store\" comme chemin\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\"; // Mettez à jour l'import de l'icône\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditUser() {\n  _s();\n\n  const dispatch = useDispatch(); // États pour gérer l'édition des informations utilisateur\n\n  const [editInfo, setEditInfo] = useState(false);\n  const [editedFirstName, setEditedFirstName] = useState(\"\");\n  const [editedLastName, setEditedLastName] = useState(\"\"); // Sélection des données utilisateur depuis Redux Store\n\n  const firstName = useSelector(selectFirstName);\n  const lastName = useSelector(selectLastName);\n  const JWTtoken = useSelector(selectJWT); // Fonction pour gérer la modification des informations utilisateur\n\n  async function handleChangeUserInfo(editedFirstName, editedLastName, JWTtoken) {\n    // Vérification des champs vides\n    if (!editedFirstName.trim() || !editedLastName.trim()) {\n      alert(\"Merci de remplir votre nom et prénom\");\n      return;\n    } // Appel de l'API pour mettre à jour les données utilisateur\n\n\n    const response = await new ApiProvider().updateEditUserData(editedFirstName, editedLastName, JWTtoken); // Mise à jour des données utilisateur dans Redux Store\n\n    dispatch(updateUserData(response.data.body)); // Désactivation du mode d'édition\n\n    setEditInfo(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [!editInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-user\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome back\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), firstName, \" \", lastName, \" !\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-user\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"change-zone\",\n          type: \"text\",\n          placeholder: firstName,\n          value: editedFirstName // Utilisation de la valeur contrôlée\n          ,\n          onChange: e => setEditedFirstName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"change-zone change-lastname\",\n          type: \"text\",\n          placeholder: lastName,\n          value: editedLastName // Utilisation de la valeur contrôlée\n          ,\n          onChange: e => setEditedLastName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-button\",\n          onClick: () => handleChangeUserInfo(editedFirstName, editedLastName, JWTtoken),\n          children: \"Validate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), editInfo ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"edit-button\",\n      onClick: () => setEditInfo(!editInfo),\n      children: [\"Close edit\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faTimes,\n        className: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"edit-button\",\n      onClick: () => setEditInfo(!editInfo),\n      children: \"Edit name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditUser, \"wHqz1c3ulPOs1lX+tdpRHGxLWOc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = EditUser;\nexport default EditUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"names":["useState","useDispatch","useSelector","ApiProvider","updateUserData","selectFirstName","selectLastName","selectJWT","FontAwesomeIcon","faTimes","EditUser","dispatch","editInfo","setEditInfo","editedFirstName","setEditedFirstName","editedLastName","setEditedLastName","firstName","lastName","JWTtoken","handleChangeUserInfo","trim","alert","response","updateEditUserData","data","body","e","target","value"],"sources":["/Users/johannacastagna/Documents/Projet11/frontend/src/components/EditUser.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ApiProvider from \"../services/Api\";\nimport { updateUserData, selectFirstName, selectLastName, selectJWT } from '../store/store'; // Utilisez simplement \"store\" comme chemin\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\"; // Mettez à jour l'import de l'icône\n\nfunction EditUser() {\n  const dispatch = useDispatch();\n\n  // États pour gérer l'édition des informations utilisateur\n  const [editInfo, setEditInfo] = useState(false);\n  const [editedFirstName, setEditedFirstName] = useState(\"\");\n  const [editedLastName, setEditedLastName] = useState(\"\");\n\n  // Sélection des données utilisateur depuis Redux Store\n  const firstName = useSelector(selectFirstName);\n  const lastName = useSelector(selectLastName);\n  const JWTtoken = useSelector(selectJWT);\n\n  // Fonction pour gérer la modification des informations utilisateur\n  async function handleChangeUserInfo(editedFirstName, editedLastName, JWTtoken) {\n    // Vérification des champs vides\n    if (!editedFirstName.trim() || !editedLastName.trim()) {\n      alert(\"Merci de remplir votre nom et prénom\");\n      return;\n    }\n\n    // Appel de l'API pour mettre à jour les données utilisateur\n    const response = await new ApiProvider().updateEditUserData(\n      editedFirstName,\n      editedLastName,\n      JWTtoken\n    );\n\n    // Mise à jour des données utilisateur dans Redux Store\n    dispatch(updateUserData(response.data.body));\n\n    // Désactivation du mode d'édition\n    setEditInfo(false);\n  }\n\n  return (\n    <div className=\"header\">\n      {!editInfo ? (\n        <div className=\"header-user\">\n          <h1>\n            Welcome back\n            <br />\n            {firstName} {lastName} !\n          </h1>\n        </div>\n      ) : (\n        <div className=\"header-user\">\n          <h1>Welcome back</h1>\n          <div className=\"edit-container\">\n            <input\n              className=\"change-zone\"\n              type=\"text\"\n              placeholder={firstName}\n              value={editedFirstName} // Utilisation de la valeur contrôlée\n              onChange={(e) => setEditedFirstName(e.target.value)}\n            />\n            <input\n              className=\"change-zone change-lastname\"\n              type=\"text\"\n              placeholder={lastName}\n              value={editedLastName} // Utilisation de la valeur contrôlée\n              onChange={(e) => setEditedLastName(e.target.value)}\n            />\n            <button\n              className=\"edit-button\"\n              onClick={() =>\n                handleChangeUserInfo(editedFirstName, editedLastName, JWTtoken)\n              }\n            >\n              Validate\n            </button>\n          </div>\n        </div>\n      )}\n\n      {editInfo ? (\n        <button className=\"edit-button\" onClick={() => setEditInfo(!editInfo)}>\n          Close edit\n          <FontAwesomeIcon icon={faTimes} className=\"close\" />{/* Utilisation de l'icône correcte */}\n        </button>\n      ) : (\n        <button className=\"edit-button\" onClick={() => setEditInfo(!editInfo)}>\n          Edit name\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default EditUser;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}