{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Fonction utilitaire pour effectuer une requête HTTP\nasync function fetchUserData(_ref) {\n  let {\n    email,\n    password\n  } = _ref;\n  const response = await fetch('http://localhost:3001/api/v1/user/login', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  if (response.status === 200) {\n    const data = await response.json();\n    return data.body;\n  } else {\n    const errorData = await response.json();\n    throw new Error(errorData.message);\n  }\n}\nexport const loginUser = createAsyncThunk('users/login', async (_ref2, thunkAPI) => {\n  let {\n    email,\n    password,\n    remember\n  } = _ref2;\n  try {\n    // Appel de la fonction utilitaire pour obtenir les données utilisateur\n    const userData = await fetchUserData({\n      email,\n      password\n    });\n\n    // Stockage du token d'authentification dans le stockage local\n    localStorage.setItem('token', userData.token);\n\n    // Gestion de la mémorisation de l'email et du mot de passe\n    if (remember) {\n      localStorage.setItem('email', email);\n      localStorage.setItem('psw', password);\n    } else {\n      localStorage.removeItem('email');\n      localStorage.removeItem('psw');\n    }\n\n    // Retour des données utilisateur\n    return userData;\n  } catch (error) {\n    // Gestion des erreurs et rejet de la valeur avec un message d'erreur\n    console.error('Error', error.message);\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\n// Votre code Redux Toolkit existant pour les reducers et les actions...\n\nexport const fetchUserBytoken = createAsyncThunk('users/fetchUserByToken', async (_ref3, thunkAPI) => {\n  let {\n    token\n  } = _ref3;\n  try {\n    const response = await fetch('http://localhost:3001/api/v1/user/profile', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        Authorization: \"Bearer \" + token,\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    if (response.status === 200) {\n      return data;\n    } else {\n      return thunkAPI.rejectWithValue(data);\n    }\n  } catch (e) {\n    console.log('Error', e.response.data);\n    return thunkAPI.rejectWithValue(e.response.data);\n  }\n});\nexport const updateUserBytoken = createAsyncThunk('users/updateUserByToken', async (_ref4, thunkAPI) => {\n  let {\n    userName\n  } = _ref4;\n  let token = localStorage.getItem(\"token\");\n  try {\n    const response = await fetch('http://localhost:3001/api/v1/user/profile', {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        Authorization: \"Bearer \" + token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userName\n      })\n    });\n    const data = await response.json();\n    if (response.status === 200) {\n      return data;\n    } else {\n      return thunkAPI.rejectWithValue(data);\n    }\n  } catch (e) {\n    console.log('Error', e.response.data);\n    return thunkAPI.rejectWithValue(e.response.data);\n  }\n});\nexport const fetchAccount = createAsyncThunk('users/fetchAccount', async thunkAPI => {\n  try {\n    const response = await fetch('/Data.json');\n    const data = await response.json();\n    if (response.status === 200) {\n      return data;\n    } else {\n      return thunkAPI.rejectWithValue(data);\n    }\n  } catch (e) {\n    console.log('Error', e.response.data);\n    return thunkAPI.rejectWithValue(e.response.data);\n  }\n});\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    userName: '',\n    email: '',\n    isFetching: false,\n    isSuccess: false,\n    isError: false,\n    errorMessage: ''\n  },\n  reducers: {\n    clearState: state => {\n      state.isError = false;\n      state.isSuccess = false;\n      state.isFetching = false;\n      return state;\n    }\n  },\n  extraReducers: {\n    [loginUser.fulfilled]: state => {\n      state.isFetching = false;\n      state.isSuccess = true;\n      return state;\n    },\n    [loginUser.rejected]: (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      console.log('payload', payload);\n      state.isFetching = false;\n      state.isError = true;\n      state.errorMessage = payload.message;\n    },\n    [loginUser.pending]: state => {\n      state.isFetching = true;\n    },\n    [fetchUserBytoken.pending]: state => {\n      state.isFetching = true;\n    },\n    [fetchUserBytoken.fulfilled]: (state, _ref6) => {\n      let {\n        payload\n      } = _ref6;\n      state.isFetching = false;\n      state.isSuccess = true;\n      state.username = payload.body.userName;\n      state.firstname = payload.body.firstName;\n      state.lastname = payload.body.lastName;\n    },\n    [fetchUserBytoken.rejected]: state => {\n      console.log('fetchUserBytoken');\n      state.isFetching = false;\n      state.isError = true;\n    },\n    [updateUserBytoken.pending]: state => {\n      state.isFetching = true;\n    },\n    [updateUserBytoken.fulfilled]: (state, _ref7) => {\n      let {\n        payload\n      } = _ref7;\n      state.isFetching = false;\n      state.isSuccess = true;\n      state.username = payload.body.userName;\n      state.firstname = payload.body.firstName;\n      state.lastname = payload.body.lastName;\n    },\n    [updateUserBytoken.rejected]: state => {\n      console.log('updateUserBytoken');\n      state.isFetching = false;\n      state.isError = true;\n    },\n    [fetchAccount.pending]: state => {\n      state.isFetching = true;\n    },\n    [fetchAccount.fulfilled]: (state, _ref8) => {\n      let {\n        payload\n      } = _ref8;\n      state.isFetching = false;\n      state.isSuccess = true;\n      state.account = payload;\n    },\n    [fetchAccount.rejected]: state => {\n      console.log('fetchAccount');\n      state.isFetching = false;\n      state.isError = true;\n    }\n  }\n});\nexport const {\n  clearState\n} = userSlice.actions;\nexport const userSelector = state => state.user;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchUserData","_ref","email","password","response","fetch","method","headers","Accept","body","JSON","stringify","status","data","json","errorData","Error","message","loginUser","_ref2","thunkAPI","remember","userData","localStorage","setItem","token","removeItem","error","console","rejectWithValue","fetchUserBytoken","_ref3","Authorization","e","log","updateUserBytoken","_ref4","userName","getItem","fetchAccount","userSlice","name","initialState","isFetching","isSuccess","isError","errorMessage","reducers","clearState","state","extraReducers","fulfilled","rejected","_ref5","payload","pending","_ref6","username","firstname","firstName","lastname","lastName","_ref7","_ref8","account","actions","userSelector","user"],"sources":["/Users/johannacastagna/Documents/projet11Enieme/frontend/src/features/UserSlices.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Fonction utilitaire pour effectuer une requête HTTP\nasync function fetchUserData({ email, password }) {\n  const response = await fetch('http://localhost:3001/api/v1/user/login', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password }),\n  });\n\n  if (response.status === 200) {\n    const data = await response.json();\n    return data.body;\n  } else {\n    const errorData = await response.json();\n    throw new Error(errorData.message);\n  }\n}\n\nexport const loginUser = createAsyncThunk('users/login', async ({ email, password, remember }, thunkAPI) => {\n  try {\n    // Appel de la fonction utilitaire pour obtenir les données utilisateur\n    const userData = await fetchUserData({ email, password });\n\n    // Stockage du token d'authentification dans le stockage local\n    localStorage.setItem('token', userData.token);\n\n    // Gestion de la mémorisation de l'email et du mot de passe\n    if (remember) {\n      localStorage.setItem('email', email);\n      localStorage.setItem('psw', password);\n    } else {\n      localStorage.removeItem('email');\n      localStorage.removeItem('psw');\n    }\n\n    // Retour des données utilisateur\n    return userData;\n  } catch (error) {\n    // Gestion des erreurs et rejet de la valeur avec un message d'erreur\n    console.error('Error', error.message);\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\n// Votre code Redux Toolkit existant pour les reducers et les actions...\n\n\nexport const fetchUserBytoken = createAsyncThunk(\n  'users/fetchUserByToken',\n  async ({ token }, thunkAPI) => {\n    try {\n      const response = await fetch(\n        'http://localhost:3001/api/v1/user/profile',\n        {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json',\n            Authorization: \"Bearer \" + token,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n      const data = await response.json();\n\n      if (response.status === 200) {\n        return data ;\n      } else {\n        return thunkAPI.rejectWithValue(data);\n      }\n    } catch (e) {\n      console.log('Error', e.response.data);\n      return thunkAPI.rejectWithValue(e.response.data);\n    }\n  }\n);\n\nexport const updateUserBytoken = createAsyncThunk(\n  'users/updateUserByToken',\n  async ( {userName} , thunkAPI) => {\n    let token = localStorage.getItem(\"token\")\n    try {\n      const response = await fetch(\n        'http://localhost:3001/api/v1/user/profile',\n        {\n          method: 'PUT',\n          headers: {\n            Accept: 'application/json',\n            Authorization: \"Bearer \" + token,\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            userName\n          }),\n        }\n      );\n      const data = await response.json();\n\n      if (response.status === 200) {\n        return data ;\n      } else {\n        return thunkAPI.rejectWithValue(data);\n      }\n    } catch (e) {\n      console.log('Error', e.response.data);\n      return thunkAPI.rejectWithValue(e.response.data);\n    }\n  }\n);\n\nexport const fetchAccount = createAsyncThunk(\n  'users/fetchAccount',\n  async ( thunkAPI) => {\n    try {\n      const response = await fetch('/Data.json');\n      const data = await response.json();\n\n      if (response.status === 200) {\n        return data ;\n      } else {\n        return thunkAPI.rejectWithValue(data);\n      }\n    } catch (e) {\n      console.log('Error', e.response.data);\n      return thunkAPI.rejectWithValue(e.response.data);\n    }\n  }\n);\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    userName: '',\n    email: '',\n    isFetching: false,\n    isSuccess: false,\n    isError: false,\n    errorMessage: '',\n  },\n  reducers: {\n    clearState: (state) => {\n      state.isError = false;\n      state.isSuccess = false;\n      state.isFetching = false;\n\n      return state;\n    },\n  },\n  extraReducers: {\n    [loginUser.fulfilled]: (state) => {\n      state.isFetching = false;\n      state.isSuccess = true;\n      return state;\n    },\n    [loginUser.rejected]: (state, { payload }) => {\n      console.log('payload', payload);\n      state.isFetching = false;\n      state.isError = true;\n      state.errorMessage = payload.message;\n    },\n    [loginUser.pending]: (state) => {\n      state.isFetching = true;\n    },\n    [fetchUserBytoken.pending]: (state) => {\n      state.isFetching = true;\n    },\n    [fetchUserBytoken.fulfilled]: (state, { payload }) => {\n      state.isFetching = false;\n      state.isSuccess = true;\n      state.username = payload.body.userName;\n      state.firstname = payload.body.firstName;\n      state.lastname = payload.body.lastName;\n    },\n    [fetchUserBytoken.rejected]: (state) => {\n      console.log('fetchUserBytoken');\n      state.isFetching = false;\n      state.isError = true;\n    },\n    [updateUserBytoken.pending]: (state) => {\n      state.isFetching = true;\n    },\n    [updateUserBytoken.fulfilled]: (state, { payload }) => {\n      state.isFetching = false;\n      state.isSuccess = true;\n      state.username = payload.body.userName;\n      state.firstname = payload.body.firstName;\n      state.lastname = payload.body.lastName;\n    },\n    [updateUserBytoken.rejected]: (state) => {\n      console.log('updateUserBytoken');\n      state.isFetching = false;\n      state.isError = true;\n    },\n\n    [fetchAccount.pending]: (state) => {\n      state.isFetching = true;\n    },\n    [fetchAccount.fulfilled]: (state, { payload }) => {\n      state.isFetching = false;\n      state.isSuccess = true;\n      state.account = payload;\n    },\n    [fetchAccount.rejected]: (state) => {\n      console.log('fetchAccount');\n      state.isFetching = false;\n      state.isError = true;\n    },\n  },\n});\n\nexport const { clearState } = userSlice.actions;\n\nexport const userSelector = (state) => state.user;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}