{"ast":null,"code":"var _jsxFileName = \"/Users/johannacastagna/Documents/Projet11/frontend/src/pages/user.jsx\",\n    _s = $RefreshSig$();\n\nimport { transactionData } from \"../data/data\";\nimport CarteDePaiement from \"../components/CarteDePaiement\";\nimport { useEffect } from \"react\";\nimport { selectJWT, selectUserLogin, setUserData } from '../store/store'; // Assurez-vous de définir le chemin correct vers votre fichier store.jsx\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ApiCalls from \"../services/Api\";\nimport { Navigate } from \"react-router-dom\";\nimport userProfile from \"../components/UserProfile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserPage() {\n  _s();\n\n  let dispatch = useDispatch();\n  let JWT = useSelector(selectJWT);\n  const connected = useSelector(selectUserLogin); // Utilisez useEffect pour effectuer une action lorsque le composant est monté ou lorsque JWT change.\n\n  useEffect(() => {\n    async function getUserProfile() {\n      try {\n        // Faites une requête pour récupérer les données du profil de l'utilisateur avec JWT.\n        const response = await new ApiCalls().getUserProfileData(JWT); // Mettez à jour les données de l'utilisateur dans le store Redux.\n\n        dispatch(setUserData(response.data.body));\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération du profil de l'utilisateur : \", error); // Vous pouvez gérer les erreurs ici, par exemple, afficher un message à l'utilisateur.\n      }\n    }\n\n    getUserProfile();\n  }, [JWT, dispatch]); // Si l'utilisateur n'est pas connecté, redirigez-le vers la page de connexion.\n\n  if (connected === false || connected === undefined || connected === null) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/sign-in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main bg-dark\",\n    children: [/*#__PURE__*/_jsxDEV(UserProfile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"sr-only\",\n      children: \"Accounts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), transactionData.map(_ref => {\n      let {\n        id,\n        title,\n        amount,\n        description\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(CarteDePaiement, {\n        title: title,\n        amount: amount,\n        description: description\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserPage, \"z00FehH06mXMTfxod+qnSiybdMg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = UserPage;\nexport default UserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["transactionData","CarteDePaiement","useEffect","selectJWT","selectUserLogin","setUserData","useDispatch","useSelector","ApiCalls","Navigate","userProfile","UserPage","dispatch","JWT","connected","getUserProfile","response","getUserProfileData","data","body","error","console","undefined","map","id","title","amount","description"],"sources":["/Users/johannacastagna/Documents/Projet11/frontend/src/pages/user.jsx"],"sourcesContent":["import { transactionData } from \"../data/data\";\nimport CarteDePaiement from \"../components/CarteDePaiement\";\nimport { useEffect } from \"react\";\nimport { selectJWT, selectUserLogin, setUserData } from '../store/store'; // Assurez-vous de définir le chemin correct vers votre fichier store.jsx\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ApiCalls from \"../services/Api\";\n\nimport { Navigate } from \"react-router-dom\";\nimport userProfile from \"../components/UserProfile\";\n\nfunction UserPage() {\n  let dispatch = useDispatch();\n  let JWT = useSelector(selectJWT);\n  const connected = useSelector(selectUserLogin);\n\n  // Utilisez useEffect pour effectuer une action lorsque le composant est monté ou lorsque JWT change.\n  useEffect(() => {\n    async function getUserProfile() {\n      try {\n        // Faites une requête pour récupérer les données du profil de l'utilisateur avec JWT.\n        const response = await new ApiCalls().getUserProfileData(JWT);\n        \n        // Mettez à jour les données de l'utilisateur dans le store Redux.\n        dispatch(setUserData(response.data.body));\n        \n      } catch (error) {\n        console.error(\"Erreur lors de la récupération du profil de l'utilisateur : \", error);\n        // Vous pouvez gérer les erreurs ici, par exemple, afficher un message à l'utilisateur.\n      }\n    }\n    getUserProfile();\n  }, [JWT, dispatch]);\n\n  // Si l'utilisateur n'est pas connecté, redirigez-le vers la page de connexion.\n  if (connected === false || connected === undefined || connected === null) {\n    return <Navigate to=\"/sign-in\" />;\n  }\n\n  return (\n    <main className=\"main bg-dark\">\n      {/* Composant UserProfile pour afficher les informations de l'utilisateur */}\n      <UserProfile />\n      <h2 className=\"sr-only\">Accounts</h2>\n      {/* Mapping des transactions */}\n      {transactionData.map(({ id, title, amount, description }) => {\n        return (\n          <CarteDePaiement key={id} title={title} amount={amount} description={description} />\n        );\n      })}\n    </main>\n  );\n}\n\nexport default UserPage;\n"],"mappings":";;;AAAA,SAASA,eAAT,QAAgC,cAAhC;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,EAAoBC,eAApB,EAAqCC,WAArC,QAAwD,gBAAxD,C,CAA0E;;AAC1E,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;AAEA,SAASC,QAAT,GAAoB;EAAA;;EAClB,IAAIC,QAAQ,GAAGN,WAAW,EAA1B;EACA,IAAIO,GAAG,GAAGN,WAAW,CAACJ,SAAD,CAArB;EACA,MAAMW,SAAS,GAAGP,WAAW,CAACH,eAAD,CAA7B,CAHkB,CAKlB;;EACAF,SAAS,CAAC,MAAM;IACd,eAAea,cAAf,GAAgC;MAC9B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAM,IAAIR,QAAJ,GAAeS,kBAAf,CAAkCJ,GAAlC,CAAvB,CAFE,CAIF;;QACAD,QAAQ,CAACP,WAAW,CAACW,QAAQ,CAACE,IAAT,CAAcC,IAAf,CAAZ,CAAR;MAED,CAPD,CAOE,OAAOC,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAc,8DAAd,EAA8EA,KAA9E,EADc,CAEd;MACD;IACF;;IACDL,cAAc;EACf,CAfQ,EAeN,CAACF,GAAD,EAAMD,QAAN,CAfM,CAAT,CANkB,CAuBlB;;EACA,IAAIE,SAAS,KAAK,KAAd,IAAuBA,SAAS,KAAKQ,SAArC,IAAkDR,SAAS,KAAK,IAApE,EAA0E;IACxE,oBAAO,QAAC,QAAD;MAAU,EAAE,EAAC;IAAb;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE;IAAM,SAAS,EAAC,cAAhB;IAAA,wBAEE,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAI,SAAS,EAAC,SAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,EAKGd,eAAe,CAACuB,GAAhB,CAAoB,QAAwC;MAAA,IAAvC;QAAEC,EAAF;QAAMC,KAAN;QAAaC,MAAb;QAAqBC;MAArB,CAAuC;MAC3D,oBACE,QAAC,eAAD;QAA0B,KAAK,EAAEF,KAAjC;QAAwC,MAAM,EAAEC,MAAhD;QAAwD,WAAW,EAAEC;MAArE,GAAsBH,EAAtB;QAAA;QAAA;QAAA;MAAA,QADF;IAGD,CAJA,CALH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;GAzCQb,Q;UACQL,W,EACLC,W,EACQA,W;;;KAHXI,Q;AA2CT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}