[{"/Users/johannacastagna/Documents/Projet11/frontend/src/index.jsx":"1","/Users/johannacastagna/Documents/Projet11/frontend/src/utils/store.js":"2","/Users/johannacastagna/Documents/Projet11/frontend/src/components/Footer/index.jsx":"3","/Users/johannacastagna/Documents/Projet11/frontend/src/components/Header/index.jsx":"4","/Users/johannacastagna/Documents/Projet11/frontend/src/pages/Home/index.jsx":"5","/Users/johannacastagna/Documents/Projet11/frontend/src/pages/User/index.jsx":"6","/Users/johannacastagna/Documents/Projet11/frontend/src/pages/Error/index.jsx":"7","/Users/johannacastagna/Documents/Projet11/frontend/src/features/UserSlices.js":"8","/Users/johannacastagna/Documents/Projet11/frontend/src/components/Banner/index.jsx":"9","/Users/johannacastagna/Documents/Projet11/frontend/src/components/Account/index.jsx":"10","/Users/johannacastagna/Documents/Projet11/frontend/src/components/EditProfile/index.jsx":"11","/Users/johannacastagna/Documents/Projet11/frontend/src/pages/SignIn/index.jsx":"12"},{"size":967,"mtime":1703070437193,"results":"13","hashOfConfig":"14"},{"size":722,"mtime":1703003317497,"results":"15","hashOfConfig":"14"},{"size":216,"mtime":1702984243838,"results":"16","hashOfConfig":"14"},{"size":1840,"mtime":1703098468903,"results":"17","hashOfConfig":"14"},{"size":1772,"mtime":1702991610768,"results":"18","hashOfConfig":"14"},{"size":1382,"mtime":1702992549851,"results":"19","hashOfConfig":"14"},{"size":405,"mtime":1702994720558,"results":"20","hashOfConfig":"14"},{"size":5505,"mtime":1702983970250,"results":"21","hashOfConfig":"14"},{"size":548,"mtime":1702993229848,"results":"22","hashOfConfig":"14"},{"size":611,"mtime":1702992031927,"results":"23","hashOfConfig":"14"},{"size":3546,"mtime":1702992838041,"results":"24","hashOfConfig":"14"},{"size":3101,"mtime":1703098174557,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"orp6tv",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"29"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/johannacastagna/Documents/Projet11/frontend/src/index.jsx",[],[],[],"/Users/johannacastagna/Documents/Projet11/frontend/src/utils/store.js",["66"],[],"import { configureStore, combineReducers, applyMiddleware } from '@reduxjs/toolkit';\nimport { userSlice } from '../features/UserSlices';\nimport thunk from 'redux-thunk'; // Exemple de middleware Redux Thunk\n\n// Combine les réducteurs de toutes les tranches (slices) si nécessaire\nconst rootReducer = combineReducers({\n  user: userSlice.reducer,\n  // Ajoutez d'autres tranches ici si nécessaire\n});\n\n// Middleware Redux, par exemple Redux Thunk\nconst middleware = [thunk];\n\n// Configure le store Redux en utilisant les réducteurs combinés et le middleware\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  // Ajoutez d'autres options de configuration ici si nécessaire\n});\n\nexport default store;\n","/Users/johannacastagna/Documents/Projet11/frontend/src/components/Footer/index.jsx",[],[],"/Users/johannacastagna/Documents/Projet11/frontend/src/components/Header/index.jsx",[],[],"/Users/johannacastagna/Documents/Projet11/frontend/src/pages/Home/index.jsx",[],[],"/Users/johannacastagna/Documents/Projet11/frontend/src/pages/User/index.jsx",["67"],[],"import './user_module.scss'\nimport Account from '../../components/Account'\nimport { useNavigate } from 'react-router-dom'\nimport EditProfile from '../../components/EditProfile'\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchAccount, userSelector, clearState } from '../../features/UserSlices';\n\n\nfunction User() {\n    let token = localStorage.getItem(\"token\")\n    const navigate = useNavigate()\n    if(token === null) {\n        navigate(\"/signIn\")\n    }\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n        dispatch(fetchAccount());\n    }, [dispatch]);\n    \n    const { isError, account, isFetching } = useSelector(userSelector);\n    \n    useEffect(() => {\n        return () => {\n        dispatch(clearState());\n        };\n    }, [dispatch]);\n    \n    useEffect(() => {\n        if (isError) {\n        dispatch(clearState());\n        }\n    }, [isError, dispatch]);\n    return (\n        <main className=\"main bg-dark\">\n          <EditProfile token={token} />\n          <h2 className=\"sr-only\">Accounts</h2>\n          {account?.map((accounts) => (\n            <Account\n              key={accounts.id}\n              title={accounts.title}\n              amount={accounts.amount}\n              description={accounts.description}\n            />\n          ))}\n        </main>\n      );\n      \n\n} \nexport default User","/Users/johannacastagna/Documents/Projet11/frontend/src/pages/Error/index.jsx",[],[],"/Users/johannacastagna/Documents/Projet11/frontend/src/features/UserSlices.js",[],[],"/Users/johannacastagna/Documents/Projet11/frontend/src/components/Banner/index.jsx",[],[],"/Users/johannacastagna/Documents/Projet11/frontend/src/components/Account/index.jsx",[],[],"/Users/johannacastagna/Documents/Projet11/frontend/src/components/EditProfile/index.jsx",["68"],[],"import { useForm } from \"react-hook-form\";\nimport \"./editProfile_module.scss\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { userSelector, clearState, updateUserBytoken, fetchUserBytoken } from \"../../features/UserSlices\";\n\nfunction EditProfile({ token }) {\n  // Utilisation de react-hook-form pour gérer le formulaire\n  const { register, handleSubmit, formState: { errors } } = useForm();\n  const [visible, setVisible] = useState('close');\n  const [message, setMessage] = useState(\"\");\n  const setCollapse = () => {\n    // Fonction pour afficher ou masquer le formulaire d'édition du nom d'utilisateur\n    setVisible(visible === 'close' ? 'open' : 'close');\n    setMessage('');\n  }\n  const dispatch = useDispatch();\n  const { isFetching, isSuccess, isError, errorMessage, username, firstname, lastname } = useSelector(userSelector);\n\n  // Utilisation de useEffect pour charger les données de l'utilisateur lors du chargement du composant\n  useEffect(() => {\n    dispatch(fetchUserBytoken({ token: token }));\n    dispatch(clearState());\n  }, [dispatch, token]);\n\n  // Fonction de soumission du formulaire\n  const onSubmit = async (data) => {\n    dispatch(updateUserBytoken(data));\n  };\n\n  useEffect(() => {\n    return () => {\n      // Nettoyage des données du composant lorsque celui-ci est démonté\n      dispatch(clearState());\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isError) {\n      // Gestion des erreurs\n      console.log(errorMessage);\n      dispatch(clearState());\n    }\n\n    if (isSuccess) {\n      // Gestion de la réussite de la mise à jour du nom d'utilisateur\n      dispatch(clearState());\n      setMessage(\"User name updated !\");\n    }\n  }, [dispatch, isError, isSuccess, errorMessage, setMessage]);\n\n  return (\n    <section className=\"profile\">\n      <>\n        <div className=\"header\">\n          <h1>Welcome back<br />{firstname} {lastname} !</h1>\n          <button className=\"edit-button\" onClick={() => setCollapse()}>Edit Name</button>\n        </div>\n        <form onSubmit={handleSubmit(onSubmit)} className={`whiteBackground collapse ${visible}`}>\n          <div className=\"input-wrapper\">\n            <label htmlFor='userName'>User name</label>\n            <input \n              type=\"text\" \n              id='userName' \n              name='userName'\n              placeholder={username}\n              {...register(\"userName\", { required: true })} \n              defaultValue={username} \n            />\n            {errors.userName && <span>This field is required</span>}\n          </div>\n          <div className=\"input-wrapper\">\n            <label htmlFor='firstName'>First name</label>\n            <input    \n              type=\"text\" \n              id='firstName' \n              name='firstName'\n              disabled \n              defaultValue={firstname}\n            />\n          </div>\n          <div className=\"input-wrapper\">\n            <label htmlFor='lastName'>Last name</label>\n            <input \n              type=\"text\" \n              id='lastName' \n              name='lastName'\n              disabled \n              defaultValue={lastname}\n            />\n          </div>\n          <p>{message}</p>\n          <div className=\"button-group\">\n            <button type=\"submit\" className=\"sign-in-button\">Save</button>\n            <button type=\"reset\" className=\"sign-in-button\" onClick={() => setCollapse()}>Cancel</button>\n          </div>\n        </form>\n      </>\n    </section>\n  );\n  \n}\n\nexport default EditProfile;\n","/Users/johannacastagna/Documents/Projet11/frontend/src/pages/SignIn/index.jsx",[],[],{"ruleId":"69","severity":1,"message":"70","line":1,"column":43,"nodeType":"71","messageId":"72","endLine":1,"endColumn":58},{"ruleId":"69","severity":1,"message":"73","line":22,"column":31,"nodeType":"71","messageId":"72","endLine":22,"endColumn":41},{"ruleId":"69","severity":1,"message":"73","line":19,"column":11,"nodeType":"71","messageId":"72","endLine":19,"endColumn":21},"no-unused-vars","'applyMiddleware' is defined but never used.","Identifier","unusedVar","'isFetching' is assigned a value but never used."]